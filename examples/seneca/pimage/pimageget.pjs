background(0);
PImage greenSquare = createImage(100, 100, ARGB);
for (int i = 0; i < greenSquare.pixels.length; i++) {
 // make greenSquare green
  greenSquare.pixels[i] = 4278255360;
}
image(greenSquare, 0, 0);
PImage blueSquare = createImage(100, 100, ARGB);
for (int i = 0; i < blueSquare.pixels.length; i++) {
 // make blueSquare blue
  blueSquare.pixels[i] = 4278190335;
}
image(blueSquare, 100, 0);

// draw red square inside green then get and put in blue
PImage redSquare = createImage(40,40,ARGB);
for (int i = 0; i < redSquare.pixels.length; i++) {
 // make redSquare red
  redSquare.pixels[i] = 4294901760;
}
image(redSquare,30,30);

PImage getRedSquare = createImage(40,40,ARGB);
getRedSquare = get(30,30,40,40);
image(getRedSquare, 130,30);

PImage testGet4arg = createImage(100,40,ARGB);
testGet4arg = get(50,40,100,40);
image(testGet4arg, 50,100);

PImage testGet5arg = createImage(100,40,ARGB);
testGet5arg = testGet4arg.get(0,0,100,40);
image(testGet4arg, 50,150);

println("createImage() makes the green square, blue square, and the red square inside the green square.");
println("image() places the green red and blue squares.");
println("getRedSquare is created by calling get(x,y,w,h) on the coordinates of where redSquare was placed");
println("image() places getRedSquare inside blue.  no green pixels are copied");